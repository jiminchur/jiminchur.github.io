{"data":{"allContentfulPost":{"nodes":[{"title":"Docling이란??","slug":"docling","category":["docling","EasyOCR","Tesseract","RapidOCR"],"description":{"description":"정규화된 JSON/Markdown으로 문서를 변환하는 AI기반 문서 파서 Docling에 대해서 알아보자"}},{"title":"DataLake Architecture 설계 Lambda & Kappa Architecture","slug":"datalake-architecture-lambda-and-kappa-architecture","category":["DataLake","KappaArchitecture","LambdaArchitecture"],"description":{"description":"DataLake Architecture 설계중 Lambda 방법론과 Kappa 방법론"}},{"title":"DataWarehouse, DataLake, DataLakehouse 비교 분석","slug":"datawarehouse-datalake-datalakehouse","category":["DataWarehouse","DataLake","DataLakehouse","DeltaLake"],"description":{"description":"DataWarehouse, DataLake, DataLakehouse의 차이와 장단점, 성능비교"}},{"title":"빅데이터 및 분석을 위한 데이터 웨어하우스 설계 방법론 비교","slug":"dw","category":["DataWarehouse","DataMart"],"description":{"description":"논문에 나오는 4가지 주요 데이터 웨어하우스 설계 방법론(Inmon, Kimball, Data Vault, Lambda Architecture)을 중심으로 각 접근법의 핵심 개념, 장단점, 그리고 비교 분석 내용을 중점적으로 정리"}},{"title":"ISR과 Replication에 대해서","slug":"isr-replication","category":["Kafka"],"description":{"description":"Kafka의 고가용성과 내결함성을 보장하는 핵심 매커니즘인 ISR(In-Sync Replicas)과 Replication(복제)에 대해 설명합니다. Replication이란 무엇이며, ISR이 어떤 역할을 하며 왜 중요한지, Kafka 클러스터 운영 시 발생할 수 있는 Replica 불일치 상황, Leader 선출, 데이터 유실 방지 전략까지 함께 다룹니다."}},{"title":"Spark환경에서 Python과 Scala API 성능 비교","slug":"spark-python-scala-api","category":["spark","pyspark","scala","python"],"description":{"description":"Apache Spark는 대규모를 분산처리하는 프레임워크로, 메모리 기반 연산을 통해 Hadoop에 비해 실시간 데이터 처리 성능을 높인 플랫폼이다."}},{"title":"데이터 마이닝","slug":"database14","category":["CS","Database"],"description":{"description":"데이터 마이닝의 개념과 프로세스를 정리하고, K-NN 알고리즘의 원리와 활용 방법을 쉽게 설명합니다. 🚀"}},{"title":"정규표현식","slug":"word","category":["etc"],"description":{"description":"정규표현식"}},{"title":"ELK란??","slug":"elk","category":["Kafka"],"description":{"description":"ELK란??"}},{"title":"Topic, Partition, Segment에 대해서 알아보자","slug":"topic-partition-segment","category":["Kafka"],"description":{"description":"Topic, Partition, Segment에 대해서 알아보자"}},{"title":"SQL Injection란 무엇일까??","slug":"sql-injection","category":["Secure Coding"],"description":{"description":"SQL Injection란 무엇일까??"}},{"title":"XSS (Cross-Site Scripting)란 무엇일까??","slug":"xss-cross-site-scripting","category":["Secure Coding"],"description":{"description":"XSS (Cross-Site Scripting)란 무엇일까??"}},{"title":"CSRF (Cross-Site Request Forgery)란 무엇일까??","slug":"csrf-cross-site-request-forgery","category":["Secure Coding"],"description":{"description":"CSRF (Cross-Site Request Forgery)란 무엇일까??"}},{"title":"CORS (Cross-Origin Resource Sharing)란 무엇일까??","slug":"cors-cross-origin-resource-sharing","category":["Secure Coding"],"description":{"description":"CORS (Cross-Origin Resource Sharing)란 무엇일까??"}},{"title":" MSA환경에서 Kafka 실습하기(2)","slug":"msa-kafka-2","category":["Kafka"],"description":{"description":"MSA환경에서 Kafka 실습하기(2)"}},{"title":"MSA환경에서 Kafka 실습하기(1)","slug":"msa-kafka-1","category":["Kafka"],"description":{"description":"MSA환경에서 Kafka 실습하기(1)"}},{"title":"MSA환경에서 RabbitMQ 실습 (2)","slug":"msa-rabbitmq-2","category":["RabbitMQ"],"description":{"description":"MSA환경에서 RabbitMQ 실습 (2)"}},{"title":"MSA환경에서 RabbitMQ 실습 (1)","slug":"msa-rabbitmq-1","category":["RabbitMQ"],"description":{"description":"MSA환경에서 RabbitMQ 실습 (1)"}},{"title":"RabbitMQ란??","slug":"rabbitmq","category":["RabbitMQ"],"description":{"description":"RabbitMQ란"}},{"title":"Kafka란??","slug":"kafka","category":["Kafka"],"description":{"description":"Kafka란??"}},{"title":"요청 종류에 따른 개발","slug":"large-scale2","category":["large-scale-system"],"description":{"description":"읽기 요청 최적화 하는 방법이랑 쓰기 요청 최적화 하는 방법"}},{"title":"동시 접속자와 초당 요청량","slug":"large-scale1","category":["large-scale-system"],"description":{"description":"대규모 시스템을 설계할 때 가장 중요한 요소 중 하나는 사용자 수이다."}},{"title":"모니터링과 로깅","slug":"large-scale4","category":["large-scale-system"],"description":{"description":"모니터링과 로깅"}},{"title":"데이터 일관성 유지 방법","slug":"large-scale3","category":["large-scale-system"],"description":{"description":"데이터 일관성 유지 방법"}},{"title":"모든 API 의 Response Header 에 Server-Port Key로 현재 실행중인 서버의 포트를 추가하기","slug":"api-response-header-server-port-key","category":["etc"],"description":{"description":"모든 API 의 Response Header 에 Server-Port Key로 현재 실행중인 서버의 포트를 추가하기"}},{"title":"SpringBoot 프로젝트에 캐싱 적용하기","slug":"springboot","category":["Redis","Spring Boot"],"description":{"description":"SpringBoot 프로젝트에 캐싱 적용하기"}},{"title":"캐싱 개념과 캐싱 전략","slug":"redis-cache","category":["Redis"],"description":{"description":"캐싱 개념과 캐싱 전략"}},{"title":"리더보드와 Sorted Set","slug":"sorted-set","category":["Redis"],"description":{"description":"리더보드와 Sorted Set"}},{"title":"HttpSession과 Session Clustering","slug":"httpsession-session-clustering","category":["Redis"],"description":{"description":"HttpSession과 Session Clustering"}},{"title":"SpringBoot에서 Redis 사용해보기","slug":"springboot-redis","category":["Redis","Spring Boot"],"description":{"description":"SpringBoot에서 Redis 사용해보기"}},{"title":"Redis 타입 및 명령어 살펴보기","slug":"redis2","category":["Redis"],"description":{"description":"Redis 타입 및 명령어 살펴보기"}},{"title":"Redis Docker로 설치하기","slug":"redis-docker","category":["Redis","Docker"],"description":{"description":"Redis Docker로 설치하기"}},{"title":"Redis란??","slug":"redis","category":["Redis"],"description":{"description":"Redis란??"}},{"title":"스파르타코딩클럽 JAVA 단기 심화 부트캠프","slug":"java","category":["회고"],"description":{"description":"스파르타코딩클럽 JAVA 단기 심화 부트캠프"}},{"title":"gatsby-theme-portfolio-minimal 폴더 상세 정리해보기 (2)","slug":"gatsby-theme-portfolio-minimal-2","category":["Gatsby"],"description":{"description":"gatsby-theme-portfolio-minimal 폴더 상세 정리해보기 (2)"}},{"title":"Github Blog jekyll에서 Gatsby이전하기(1)","slug":"github-blog-jekyll-gatsby-1","category":["Gatsby"],"description":{"description":"Github Blog jekyll에서 Gatsby이전하기(1)"}},{"title":"[코멘토 DB직무부트캠프] 1주차 회고","slug":"comento2","category":["회고"],"description":{"description":"코멘토 DB 직무부트캠프"}},{"title":"[코멘토 DB직무부트캠프] 코멘토를 선택하게된 이유","slug":"comento","category":["회고"],"description":{"description":"코멘토 DB 직무부트캠프"}},{"title":"Dockerfile이란??","slug":"dockerfile","category":["Docker"],"description":{"description":"Dockerfile을 활용하면 애플리케이션의 실행 환경을 코드로 정의하고 자동화할 수 있다."}},{"title":"Docker 기본명령어","slug":"docker3","category":["Docker"],"description":{"description":"Docker의 기본 명령어를 정리하여 컨테이너 및 이미지 관리를 효율적으로 할 수 있도록 한다."}},{"title":"관리자 권한 부여하기","slug":"docker2","category":["Docker"],"description":{"description":"관리자 권한 부여하기"}},{"title":"Docker 설치하기","slug":"docker","category":["Docker"],"description":{"description":"Ubuntu에서 Docker를 설치하는 방법을 단계별로 정리"}},{"title":"커널과 셀","slug":"linux1","category":["Linux"],"description":{"description":"커널과 셀"}},{"title":"멀티부팅이란??","slug":"linux2","category":["Linux"],"description":{"description":"멀티부팅이란?"}},{"title":"Linux 기초","slug":"linux","category":["Linux"],"description":{"description":"Linux 기초"}}]}}}
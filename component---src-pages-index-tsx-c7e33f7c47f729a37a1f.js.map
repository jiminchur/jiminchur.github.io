{"version":3,"file":"component---src-pages-index-tsx-c7e33f7c47f729a37a1f.js","mappings":"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","sources":["webpack://minchur-gatsby-blog/./src/components/main/Introduction.tsx","webpack://minchur-gatsby-blog/./src/components/main/Category.tsx","webpack://minchur-gatsby-blog/./src/components/main/PostItem.tsx","webpack://minchur-gatsby-blog/./src/components/main/PostList.tsx","webpack://minchur-gatsby-blog/./src/pages/index.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 60px; // 이미지와 텍스트 간격 조절\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`\n\nconst ProfileImage = styled.div`\n  overflow: hidden;\n  width: 140px;\n  height: 140px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SubText = styled.div`\n  font-size: 30px;\n  font-weight: 100;\n\n  @media (max-width: 1024px) {\n    font-size: 25px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`\n\nconst MainText = styled.div`\n  font-size: 40px;\n  font-weight: 700;\n\n  @media (max-width: 1024px) {\n    font-size: 30px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`\n\nexport default function Introduction() {\n  return (\n    <Container>\n      <ProfileImage>\n        <StaticImage src=\"../../images/thumbnail.png\" alt=\"Profile Image\" />\n      </ProfileImage>\n\n      <TextContainer>\n        <SubText>Nice to Meet You!</SubText>\n        <MainText>I&apos;m DataEngineer Minchur</MainText>\n      </TextContainer>\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\ntype CategoryProps = {\n  categories: Record<string, number>\n  selectedCategory: string\n  handleSelect: (category: string) => void\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px 15px;\n  margin-top: 50px;\n  padding: 10px 0;\n`\n\nconst Item = styled.div<{ $selected: boolean }>`\n  padding: 6px 12px;\n  font-size: 14px;\n  font-weight: ${({ $selected }) => ($selected ? 600 : 400)};\n  color: ${({ $selected }) => ($selected ? '#fff' : '#333')};\n  background: ${({ $selected }) => ($selected ? '#007aff' : '#f5f5f5')};\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background: ${({ $selected }) => ($selected ? '#005ecb' : '#e0e0e0')};\n  }\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n    padding: 5px 10px;\n  }\n`\n\nexport default function Category({\n  categories,\n  selectedCategory,\n  handleSelect,\n}: CategoryProps) {\n  return (\n    <Wrapper>\n      {Object.entries(categories).map(([category, count]) => (\n        <Item\n          onClick={() => handleSelect(category)}\n          $selected={category === selectedCategory}\n          key={category}\n        >\n          #{category} ({count})\n        </Item>\n      ))}\n    </Wrapper>\n  )\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\n\ntype PostItemProps = {\n  title: string\n  date: string\n  category: string[]\n  thumbnail: IGatsbyImageData\n  description: string\n  link: string\n}\n\nconst Card = styled(Link)`\n  display: block;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  text-decoration: none;\n  color: inherit;\n  height: 100%;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n  }\n`\n\nconst ThumbnailContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  aspect-ratio: 16 / 9;\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  transition: transform 0.3s ease;\n  \n  ${Card}:hover & {\n    transform: scale(1.05);\n  }\n`\n\nconst Contents = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`\n\nconst Title = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.4;\n  margin: 0;\n  color: #2c3e50;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`\n\nconst Information = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  color: #7f8c8d;\n`\n\nconst Category = styled.div`\n  display: flex;\n  gap: 6px;\n  flex-wrap: wrap;\n`\n\nconst CategoryTag = styled.span`\n  background: #ecf0f1;\n  color: #34495e;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n`\n\nconst Date = styled.div`\n  font-weight: 400;\n`\n\nconst Description = styled.p`\n  font-size: 14px;\n  line-height: 1.5;\n  color: #5d6d7e;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`\n\nexport default function PostItem({\n  title,\n  date,\n  category,\n  thumbnail,\n  description,\n  link,\n}: PostItemProps) {\n  return (\n    <Card to={link}>\n      <ThumbnailContainer>\n        <Thumbnail image={thumbnail} alt={title} />\n      </ThumbnailContainer>\n\n      <Contents>\n        <Title>{title}</Title>\n\n        <Information>\n          <Category>\n            {category.map(item => (\n              <CategoryTag key={item}>#{item}</CategoryTag>\n            ))}\n          </Category>\n          <Date>{date}</Date>\n        </Information>\n\n        <Description>{description}</Description>\n      </Contents>\n    </Card>\n  )\n}\n","import styled from 'styled-components'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostItem from './PostItem'\n\ntype PostListProps = {\n  posts: Queries.IndexPageQuery['allContentfulPost']['nodes']\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  gap: 24px;\n  margin-top: 40px;\n  padding: 0 20px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: 20px;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 16px;\n    padding: 0 10px;\n  }\n`\n\nexport default function PostList({ posts }: PostListProps) {\n  return (\n    <Wrapper>\n      {posts.map(({ title, date, category, thumbnail, description, slug }) => (\n        <PostItem\n          title={title as string}\n          date={date as string}\n          category={category as string[]}\n          thumbnail={thumbnail?.gatsbyImageData as IGatsbyImageData}\n          description={description?.description as string}\n          link={`/${slug}`}\n          key={slug as string}\n        />\n      ))}\n    </Wrapper>\n  )\n}\n","import { useState } from 'react'\nimport { HeadFC, PageProps, graphql } from 'gatsby'\nimport Introduction from '../components/main/Introduction'\nimport Category from '../components/main/Category'\nimport PostList from '../components/main/PostList'\nimport SEO from '../components/common/Seo'\n\nexport default function Index({\n  data: {\n    allContentfulPost: { nodes },\n  },\n}: PageProps<Queries.IndexPageQuery>) {\n  const [selectedCategory, setSelectedCategory] = useState<string>('All')\n\n  const categories = nodes.reduce<Record<string, number>>(\n    (categories, post) => {\n      post.category\n        ?.filter((category): category is string => !!category)\n        .forEach(\n          category => (categories[category] = (categories[category] ?? 0) + 1),\n        )\n\n      return categories\n    },\n    { All: nodes.length },\n  )\n\n  const posts = nodes.filter(\n    ({ category }) =>\n      selectedCategory === 'All' || category?.includes(selectedCategory),\n  )\n\n  const handleSelectCategory = (category: string) =>\n    setSelectedCategory(category)\n\n  return (\n    <>\n      <Introduction />\n      <Category\n        categories={categories}\n        selectedCategory={selectedCategory}\n        handleSelect={handleSelectCategory}\n      />\n      <PostList posts={posts} />\n    </>\n  )\n}\n\nexport const Head: HeadFC = () => <SEO />\n\nexport const query = graphql`\n  query IndexPage {\n    allContentfulPost(sort: { date: DESC }) {\n      nodes {\n        title\n        category\n        slug\n        date\n        thumbnail {\n          gatsbyImageData(width: 500)\n        }\n        description {\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Container","styled","div","ProfileImage","TextContainer","SubText","MainText","Introduction","_jsxs","_jsx","StaticImage","src","alt","Wrapper","Item","_ref","$selected","_ref2","_ref3","_ref4","Category","categories","selectedCategory","handleSelect","Object","entries","map","_ref6","category","count","onClick","Card","Link","ThumbnailContainer","Thumbnail","GatsbyImage","Contents","Title","h3","Information","CategoryTag","span","Date","Description","p","PostItem","title","date","thumbnail","description","link","to","image","item","PostList","posts","slug","gatsbyImageData","Index","data","allContentfulPost","nodes","setSelectedCategory","useState","reduce","post","_post$category","filter","forEach","All","length","includes","children","Head","SEO"],"sourceRoot":""}